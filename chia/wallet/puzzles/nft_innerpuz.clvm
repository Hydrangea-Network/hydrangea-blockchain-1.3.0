(mod (
  NFT_MOD_HASH
  SINGLETON_STRUCT ; ((SINGLETON_MOD_HASH, (NFT_SINGLETON_LAUNCHER_ID, LAUNCHER_PUZZLE_HASH)))
  CURRENT_OWNER_DID
  NFT_TRANSFER_PROGRAM_HASH
  truths  ; ((my_id . full_puzhash) . ((innerpuzhash . my_amount) . (lineage_proof . singleton_struct))))
  my_did_inner_hash
  my_did_amount
  my_did_parent
  new_did
  new_did_parent
  new_did_inner_hash
  new_did_amount
  trade_price
  transfer_program_reveal
  transfer_program_solution
)

  (include condition_codes.clvm)
  (include curry-and-treehash.clinc)
  (include singleton_truths.clib)

  ; takes a lisp tree and returns the hash of it
  (defun sha256tree1 (TREE)
        (if (l TREE)
            (sha256 2 (sha256tree1 (f TREE)) (sha256tree1 (r TREE)))
            (sha256 ONE TREE)))

  (defun-inline nft_puzzle_hash (NFT_MOD_HASH SINGLETON_STRUCT NFT_TRANSFER_PROGRAM_HASH next_owner_did)
    (puzzle-hash-of-curried-function NFT_MOD_HASH
                                     (sha256tree1 NFT_TRANSFER_PROGRAM_HASH)
                                     (sha256 ONE next_owner_did)
                                     (sha256tree1 SINGLETON_STRUCT)
                                     NFT_MOD_HASH
    )
  )

  ;; return the full puzzlehash for a singleton with the innerpuzzle curried in
  ; puzzle-hash-of-curried-function is imported from curry-and-treehash.clinc
  (defun-inline calculate_full_puzzle_hash (SINGLETON_STRUCT inner_puzzle_hash)
     (puzzle-hash-of-curried-function (f SINGLETON_STRUCT)
                                      inner_puzzle_hash
                                      (sha256tree1 SINGLETON_STRUCT)
     )
  )

  ; this function calculates a coin ID given the inner puzzle and singleton information
  (defun-inline create_singleton_coin_ID (SINGLETON_STRUCT launcher_id parent innerpuzhash amount)
    (sha256 parent (calculate_full_puzzle_hash (c (f SINGLETON_STRUCT) (c launcher_id (r (r SINGLETON_STRUCT)))) innerpuzhash) amount)
  )

  (if new_did
    (c (list CREATE_COIN_ANNOUNCEMENT trade_price)
      (c (list ASSERT_COIN_ANNOUNCEMENT (sha256 (create_singleton_coin_ID SINGLETON_STRUCT new_did new_did_parent new_did_inner_hash new_did_amount) trade_price))
        (c (list ASSERT_COIN_ANNOUNCEMENT (sha256 (create_singleton_coin_ID SINGLETON_STRUCT CURRENT_OWNER_DID my_did_parent my_did_inner_hash my_did_amount) trade_price new_did))
          (c (list CREATE_COIN (nft_puzzle_hash NFT_MOD_HASH SINGLETON_STRUCT NFT_TRANSFER_PROGRAM_HASH new_did) (my_amount_truth truths) new_did)
            (if (= (sha256tree1 transfer_program_reveal) NFT_TRANSFER_PROGRAM_HASH)
                (a transfer_program_reveal (list CURRENT_OWNER_DID new_did trade_price transfer_program_solution))
                (x)
            )
          )
        )
      )
    )
    (list
      (list CREATE_COIN (nft_puzzle_hash NFT_MOD_HASH SINGLETON_STRUCT NFT_TRANSFER_PROGRAM_HASH CURRENT_OWNER_DID) (my_amount_truth truths) CURRENT_OWNER_DID)
      ; (list ASSERT_MY_AMOUNT my_amount)
      (list ASSERT_COIN_ANNOUNCEMENT (sha256 (create_singleton_coin_ID SINGLETON_STRUCT CURRENT_OWNER_DID my_did_parent my_did_inner_hash my_did_amount) 'a'))
      (list CREATE_COIN_ANNOUNCEMENT CURRENT_OWNER_DID)
    )
  )
)
